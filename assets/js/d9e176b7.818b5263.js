"use strict";(self.webpackChunkskima_docs=self.webpackChunkskima_docs||[]).push([[532],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9369:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],c={id:"contracts",title:"Contracts",sidebar_position:3},s=void 0,l={unversionedId:"contracts",id:"contracts",title:"Contracts",description:"A contract is the base model that structure a JSON communication between the BFF and the app.",source:"@site/docs/contracts.md",sourceDirName:".",slug:"/contracts",permalink:"/docs/contracts",editUrl:"https://github.com/Skima-Framework/docs/contracts.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"contracts",title:"Contracts",sidebar_position:3},sidebar:"defaultSidebar",previous:{title:"Data Types",permalink:"/docs/data_types"},next:{title:"Getting started with iOS",permalink:"/docs/ios/get_started_ios"}},p={},u=[{value:"Here&#39;s an example of a screen:",id:"heres-an-example-of-a-screen",level:4}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A contract is the base model that structure a JSON communication between the BFF and the app."),(0,o.kt)("p",null,"Currently, we have only one type of contract that is ",(0,o.kt)("inlineCode",{parentName:"p"},"Screen"),", but we are working to abstract the idea of contract to allow different schemas."),(0,o.kt)("h1",{id:"screen-contract"},"Screen Contract"),(0,o.kt)("p",null,"This contract contains the information to create an entire UI screen and all its life cycle."),(0,o.kt)("p",null,"It contains four attributes:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"metadata"),": It is an object that contains:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"id"),": Identifier of the screen. It's required."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"version"),": The version of the contract."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"flow"),": The identifier of the flow to which the screen belongs. Optional"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"actions"),": This actions will be executed through out the life cycle of the screen:",(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"didLoad"),": Array of Actions excuted when the data is loaded."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"willAppear"),": Array of Actions excuted each time the screen is shown."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"willDisappear"),": Array of Actions excuted each time the screen is hidden."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"back"),": Array of Actions executed when the user goes back."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"keepInStack"),": Boolean that indicate if the screen should be kept in stack once its dissapeared. Optional."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"backgroundColor"),": String of a color in hexadecimal form. Its the background color of the entire screen."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"ui"),": Array of Widgets that conform the user interface of the screen.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="screenSchema.json"',title:'"screenSchema.json"'},'{\n    "metadata": {\n        "id": "string",\n        "version": "string",\n        "flow": "string"\n    },\n    "actions": {\n        "didLoad": "[Action]",\n        "willAppear": "[Action]",\n        "willDisappear": "[Action]",\n        "back": "[Action]"\n    },\n    "keepInStack": "boolean",\n    "backgroundColor": "string",\n    "ui": "[Widget]"\n}\n')),(0,o.kt)("h4",{id:"heres-an-example-of-a-screen"},"Here's an example of a screen:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"https://run.mocky.io/v3/f960b018-feca-4860-bcaf-b31b66bd95b7\n")))}d.isMDXComponent=!0}}]);